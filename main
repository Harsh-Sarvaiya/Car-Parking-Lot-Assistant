#include <LiquidCrystal.h>
LiquidCrystal lcd(1,3,4,5,6,7);
// defines pins numbers
const int trigPin = 9;
const int echoPin = 10;

// NUMBER OF CARS MAX/MIN
const int carsMin = 0;
const int carsMax = 60;
int numOfCars = 58;

//int d = 250; << IS THIS VALUE USED?

// DURATION FOR ULTA SONIC PULSE
long duration;

// UNIT CONVERSION VARIABLES
int distanceCm = 0;
int distanceInch = 0;
int distanceCm_t = distanceCm; // USED TO PREVENT DUPLICATE CARS

void setup() {
    lcd.begin(16,2);
    pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
    pinMode(echoPin, INPUT); // Sets the echoPin as an Input
}


void loop() {
    // Clears the trigPin
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    distanceCm = duration * 0.034 / 2;
    distanceInch = duration * 0.0113 / 2;

//DISPLAY
    // CHANGE COUNT FROM POSITION
    if((distanceCm >= 10 && distanceCm <= 20)) {
        numOfCars++;
    } else if(distanceCm >= 1.00 && distanceCm <= 8){
        numOfCars--;
    }

    // CLEAR LCD
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("FREE SPACES: ");

    // EDGE CASE HANDLING
    // TELL USER FULL OR CORRECT -1
    if(numOfCars => carsMax){
        numOfCars = carsMax;
        lcd.print("FULL");
    }else if(numOfCars <= -1){
        numOfCars = 0;
    }else{
        lcd.print(numOfCars);
    }
    int distanceCm_t = distanceCm; // USED TO PREVENT DUPLICATE CARS

    delay(1000);
}
